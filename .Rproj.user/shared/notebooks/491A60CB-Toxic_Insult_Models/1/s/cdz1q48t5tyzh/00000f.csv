"0","# Train Decision Trees model"
"0","library(rpart)"
"0","decision_trees_model <- rpart(as.factor(label) ~ ., data = train_data2)"
"0",""
"0","# Make predictions"
"0","decision_trees_predictions <- predict(decision_trees_model, newdata = test_data2, type = ""class"")"
"0",""
"0",""
"0","# Calculate confusion matrix"
"0","decision_trees_confusion_matrix <- confusionMatrix(decision_trees_predictions, factor(test_data2$label, levels = c(0, 1)))"
"0",""
"0","# Print confusion matrix"
"0","print(decision_trees_confusion_matrix)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1","    0"
"1","    1"
"1","
         0"
"1"," 2283"
"1","  198"
"1","
         1"
"1","  109"
"1","  210"
"1","
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.8904          "
"1","
"
"1","                 95% CI :"
"1"," (0.8782, 0.9017)"
"1","
"
"1","    No Information Rate :"
"1"," 0.8543          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 1.181e-08       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.5158          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 5.102e-07       "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","            Sensitivity :"
"1"," 0.9544          "
"1","
"
"1","            Specificity :"
"1"," 0.5147          "
"1","
"
"1","         Pos Pred Value :"
"1"," 0.9202          "
"1","
"
"1","         Neg Pred Value :"
"1"," 0.6583          "
"1","
"
"1","             Prevalence :"
"1"," 0.8543          "
"1","
"
"1","         Detection Rate :"
"1"," 0.8154          "
"1","
"
"1","   Detection Prevalence :"
"1"," 0.8861          "
"1","
"
"1","      Balanced Accuracy :"
"1"," 0.7346          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","       'Positive' Class :"
"1"," 0               "
"1","
"
"1","                         "
"1","                 "
"1","
"
"0","# Extract metrics for Decision Trees model"
"0","decision_trees_precision <- decision_trees_confusion_matrix$byClass[""Pos Pred Value""]"
"0","decision_trees_recall <- decision_trees_confusion_matrix$byClass[""Sensitivity""]"
"0","decision_trees_f1_score <- decision_trees_confusion_matrix$byClass[""F1""]"
"0","decision_trees_accuracy <- decision_trees_confusion_matrix$overall[""Accuracy""]"
"0","decision_trees_specificity <- decision_trees_confusion_matrix$byClass[""Specificity""]"
"0","decision_trees_balanced_accuracy <- decision_trees_confusion_matrix$byClass[""Balanced Accuracy""]"
"0","decision_trees_kappa <- decision_trees_confusion_matrix$overall[""Kappa""]"
"0",""
"0","# Print metrics for Decision Trees model"
"0","cat(""\nDecision Trees Metrics:\n"")"
"1","
Decision Trees Metrics:
"
"0","cat(""Precision:"", decision_trees_precision, ""\n"")"
"1","Precision:"
"1"," "
"1","0.9201935"
"1"," "
"1","
"
"0","cat(""Recall:"", decision_trees_recall, ""\n"")"
"1","Recall:"
"1"," "
"1","0.9544314"
"1"," "
"1","
"
"0","cat(""F1 Score:"", decision_trees_f1_score, ""\n"")"
"1","F1 Score:"
"1"," "
"1","0.9369998"
"1"," "
"1","
"
"0","cat(""Accuracy:"", decision_trees_accuracy, ""\n"")"
"1","Accuracy:"
"1"," "
"1","0.8903571"
"1"," "
"1","
"
"0","cat(""Specificity:"", decision_trees_specificity, ""\n"")"
"1","Specificity:"
"1"," "
"1","0.5147059"
"1"," "
"1","
"
"0","cat(""Balanced Accuracy:"", decision_trees_balanced_accuracy, ""\n"")"
"1","Balanced Accuracy:"
"1"," "
"1","0.7345687"
"1"," "
"1","
"
"0","cat(""Kappa:"", decision_trees_kappa, ""\n"")"
"1","Kappa:"
"1"," "
"1","0.5157991"
"1"," "
"1","
"
